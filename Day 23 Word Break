// (--- https://leetcode.com/problems/word-break/description/ ---) 


class Solution {
public:
    bool wordBreak(string s, vector<string>& wordDict) {

        vector<bool> dp(s.size(), 0);
        dp[s.size()] = 1;
        for (int k = 1; k <= s.size(); k++) {
            for (string word : wordDict) {
                if (word.size() > k) {
                    continue;
                }
                int si = 0;
                for (; si < word.size(); si++) {
                    if (s[s.size() - k + si] != word[si]) {
                        si = word.size() + 1;
                    }
                }
                if (si == word.size() && dp[s.size() - k + si]) {
                    dp[s.size() - k] = true;
                }
            }
        }
        
        for (int k = 0; k <= s.size(); k++) {
            cout << (int)(dp[k]);
        }
        
        return dp[0];

    }
};
