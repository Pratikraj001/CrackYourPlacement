// (--- https://leetcode.com/problems/split-array-largest-sum/ ---)

class Solution {
public:
    int splitArray(vector<int>& nums, int k) {
        
        int n = nums.size();
        int low = 0, high = 0;

        for(int i  = 0; i < n ; i++){
            low = max(low, nums[i]);
            high += nums[i];
        }

        int mid = 0, ans = 0;
        while(low <= high){
            mid = (low+high)/2;

            int count = 0, tempSum = 0;
            for(int i = 0 ; i < n ; i++){
                if(tempSum + nums[i] <= mid) {
                    tempSum += nums[i];
                }
                else{
                    count++;
                    tempSum = nums[i];
                }
            }
            count++;
            if(count <= k){
                high = mid-1;
                ans = mid;
            }
            else{
                low = mid+1;
            }
        }
        return ans;
    }
};
