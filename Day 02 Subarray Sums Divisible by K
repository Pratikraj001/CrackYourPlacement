// (--- https://leetcode.com/problems/subarray-sums-divisible-by-k/ ---)


class Solution {
public:
    int subarraysDivByK(vector<int>& nums, int k) {
        int n = nums.size();
        long sum = 0;
        int cntArray = 0;
        unordered_map<int, int> ump;
        ump[0]++;

        for(auto x : nums){
            sum += x;
            int rem;
            if(sum < 0){
                int quo = abs(sum)/k + 1;
                rem = (sum+quo*k)%k;
            }
            else rem = sum%k;

            ump[rem]++;

            if(ump.at(rem) > 1){
                cntArray += (ump.at(rem)-1);
            }
            
        }
        return cntArray;
    }
};
