// (--- https://leetcode.com/problems/spiral-matrix/ ---)


class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        int n = matrix.size();
        int m = matrix[0].size();
        int left = 0, right = m-1;
        int top = 0, down = n-1;
        vector<int> v;
        
        while(v.size() < (n*m)){
            for(int i = left; i <= right && v.size() < (n*m) ; i++){
                v.push_back(matrix[top][i]);
            }
            top++;
            for(int i = top ; i <= down && v.size() < (n*m) ; i++){
                v.push_back(matrix[i][right]);
            }
            right--;
            
            for(int i = right ; i >= left && v.size() < (n*m) ; i--){
                v.push_back(matrix[down][i]);
            }
            down--;
            for(int i = down ; i >= top && v.size() < (n*m) ; i--){
                v.push_back(matrix[i][left]);
            }
            left++;
        }
        return v;
    }
};
